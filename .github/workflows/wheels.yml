name: Build wheels

on:
  push:
    branches:
      - master
    paths:
      - requirements.txt
  pull_request:
    branches:
      - master
    paths:
      - requirements.txt
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:

  lint:
    runs-on: ubuntu-latest
    name: init
    outputs:
      requirements: ${{ steps.requirements.outputs.exist }}
      apk: ${{ steps.apk.outputs.packages }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3

      - name: Get constraints
        run: wget -O constraints.txt https://raw.githubusercontent.com/home-assistant/core/dev/homeassistant/package_constraints.txt

      - name: Upload constraints.txt
        uses: actions/upload-artifact@v3.1.0
        with:
          name: constraints
          path: ./constraints.txt

  wheels:
    runs-on: ubuntu-latest
    needs: lint
    name: Prepare musllinux for ${{ matrix.abi }} with ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        arch: ["aarch64", "armhf", "armv7", "amd64", "i386"]
        abi: ["cp310"]

    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v3
      
      - name: Download constraints.txt
        uses: actions/download-artifact@v2
        with:
          name: constraints
      
      - name: Pull-Request test
        id: test
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo '::set-output name=is_test::True'
          else
            echo '::set-output name=is_test::False'
          fi

      - name: Write env-file
        shell: bash
        run: |
          (
            # Keep it for future
          ) > .env_file

      - name: Build wheels
        uses: home-assistant/wheels@2022.06.7
        with:
          abi: ${{ matrix.abi }}
          tag: musllinux_1_2
          arch: ${{ matrix.arch }}
          wheels-key: ${{ secrets.WHEELS_KEY }}
          env-file: True
          single: True
          test: ${{ steps.test.outputs.is_test }}
          constraints: "constraints.txt"
          requirements: "requirements.txt"
